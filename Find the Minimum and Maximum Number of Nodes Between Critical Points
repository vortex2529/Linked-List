vector<int> nodesBetweenCriticalPoints(ListNode* head) {
       vector<int> ans = {-1,-1};
       ListNode* prev = head;
       if(!prev) return ans;

       ListNode* curr = head->next;
       if(!curr) return ans;

       ListNode* nxt = head->next->next; 
       if(!nxt) return ans;


       int i=1;
       int firstCP =  -1;
       int lastCP = -1;
       int minDist = INT_MAX;
       while(nxt){
            bool isCP = ((curr->val > prev->val && curr->val > nxt->val)||
                        (curr->val < prev->val && curr->val < nxt->val))?true:false;

            if(isCP && firstCP == -1){
                firstCP = i;
                lastCP = i;
            }            
            else if(isCP){
                minDist = min(minDist,i-lastCP);
                lastCP = i;
            }

            prev = prev->next;
            curr = curr->next;
            nxt = nxt->next;

            i++;

       }

       if(lastCP == firstCP){
            return ans;
       }
       else{
            ans[0] = minDist;
            ans[1] = lastCP - firstCP;
       }

 
       return ans;
    }
