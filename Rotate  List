/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int getLen(ListNode* head){
        ListNode* curr = head;
        int len = 0;
        while(curr){
            len++;
            curr = curr->next;
        }
        return len;
    }
    ListNode* rotateRight(ListNode* head, int k) {
        if(!head || !head->next) return head;
        int n = getLen(head);
        k = k%n;
        if(k==0) return head;
        ListNode* curr = head;
        while(curr->next){
            curr = curr->next;
        }
        curr->next = head;

        curr = head;

     
        int i=0;
        while(i<n-k-1){
            curr = curr->next;
            i++;
        }

        head = curr->next;
        curr->next = 0;
        return head; 
    }
};
